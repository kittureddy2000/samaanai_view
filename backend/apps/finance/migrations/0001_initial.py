# Generated by Django 4.2.21 on 2025-05-26 18:33

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SpendingCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(default='#6B7280', max_length=7)),
                ('monthly_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('plaid_categories', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spending_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PlaidWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('webhook_type', models.CharField(choices=[('TRANSACTIONS', 'Transactions'), ('ITEM', 'Item'), ('ACCOUNTS', 'Accounts'), ('HOLDINGS', 'Holdings'), ('INVESTMENTS_TRANSACTIONS', 'Investment Transactions')], max_length=30)),
                ('webhook_code', models.CharField(max_length=50)),
                ('item_id', models.CharField(max_length=100)),
                ('payload', models.JSONField()),
                ('error', models.JSONField(blank=True, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['item_id', '-created_at'], name='finance_pla_item_id_ddc848_idx'), models.Index(fields=['processed', 'created_at'], name='finance_pla_process_5ed61f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plaid_institution_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('primary_color', models.CharField(blank=True, max_length=7, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('access_token', models.TextField()),
                ('item_id', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('needs_update', models.BooleanField(default=False)),
                ('last_successful_update', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('user', 'plaid_institution_id')},
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plaid_account_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('official_name', models.CharField(blank=True, max_length=200, null=True)),
                ('mask', models.CharField(blank=True, max_length=10, null=True)),
                ('type', models.CharField(choices=[('depository', 'Depository'), ('credit', 'Credit'), ('loan', 'Loan'), ('investment', 'Investment'), ('other', 'Other')], max_length=20)),
                ('subtype', models.CharField(choices=[('checking', 'Checking'), ('savings', 'Savings'), ('cd', 'CD'), ('money_market', 'Money Market'), ('credit_card', 'Credit Card'), ('auto', 'Auto Loan'), ('business', 'Business Loan'), ('commercial', 'Commercial Loan'), ('construction', 'Construction Loan'), ('consumer', 'Consumer Loan'), ('home_equity', 'Home Equity'), ('line_of_credit', 'Line of Credit'), ('mortgage', 'Mortgage'), ('student', 'Student Loan'), ('401k', '401k'), ('403b', '403b'), ('457b', '457b'), ('529', '529'), ('brokerage', 'Brokerage'), ('cash_isa', 'Cash ISA'), ('education_savings', 'Education Savings'), ('hsa', 'HSA'), ('ira', 'IRA'), ('isa', 'ISA'), ('lif', 'LIF'), ('lira', 'LIRA'), ('lrif', 'LRIF'), ('lrsp', 'LRSP'), ('pension', 'Pension'), ('prif', 'PRIF'), ('retirement', 'Retirement'), ('rlif', 'RLIF'), ('roth', 'Roth IRA'), ('roth_401k', 'Roth 401k'), ('rrif', 'RRIF'), ('rrsp', 'RRSP'), ('sarsep', 'SARSEP'), ('sep_ira', 'SEP IRA'), ('simple_ira', 'Simple IRA'), ('sipp', 'SIPP'), ('stock_plan', 'Stock Plan'), ('tfsa', 'TFSA'), ('ugma', 'UGMA'), ('utma', 'UTMA'), ('variable_annuity', 'Variable Annuity'), ('cash_management', 'Cash Management'), ('other', 'Other')], max_length=30)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('available_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('iso_currency_code', models.CharField(default='USD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('is_selected', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='finance.institution')),
            ],
            options={
                'ordering': ['institution', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plaid_transaction_id', models.CharField(max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('iso_currency_code', models.CharField(default='USD', max_length=3)),
                ('name', models.CharField(max_length=500)),
                ('merchant_name', models.CharField(blank=True, max_length=200, null=True)),
                ('category', models.JSONField(default=list)),
                ('primary_category', models.CharField(blank=True, max_length=100, null=True)),
                ('detailed_category', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateField()),
                ('authorized_date', models.DateField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('payment_channel', models.CharField(max_length=20)),
                ('transaction_type', models.CharField(blank=True, choices=[('special', 'Special'), ('place', 'Place'), ('digital', 'Digital'), ('unresolved', 'Unresolved')], max_length=20, null=True)),
                ('location', models.JSONField(blank=True, default=dict)),
                ('pending', models.BooleanField(default=False)),
                ('pending_transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('account_owner', models.CharField(blank=True, max_length=200, null=True)),
                ('user_category', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='finance.account')),
            ],
            options={
                'ordering': ['-date', '-datetime'],
                'indexes': [models.Index(fields=['-date'], name='finance_tra_date_7b7e25_idx'), models.Index(fields=['primary_category'], name='finance_tra_primary_c8e952_idx'), models.Index(fields=['account', '-date'], name='finance_tra_account_6a4116_idx')],
            },
        ),
        migrations.CreateModel(
            name='NetWorthSnapshot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('total_assets', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_liabilities', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('net_worth', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cash_and_investments', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('credit_cards', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('loans', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networth_snapshots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='MonthlySpending',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('amount_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transaction_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_totals', to='finance.spendingcategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_spending', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', '-month', 'category'],
                'unique_together': {('user', 'category', 'year', 'month')},
            },
        ),
    ]

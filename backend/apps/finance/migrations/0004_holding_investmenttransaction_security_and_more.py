# Generated by Django 4.2.22 on 2025-06-07 04:11

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0003_alter_transaction_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=18)),
                ('institution_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('institution_price_as_of', models.DateField(blank=True, null=True)),
                ('institution_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('cost_basis', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('iso_currency_code', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-institution_value'],
            },
        ),
        migrations.CreateModel(
            name='InvestmentTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plaid_investment_transaction_id', models.CharField(max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('quantity', models.DecimalField(blank=True, decimal_places=8, max_digits=18, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('fees', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('dividend', 'Dividend'), ('interest', 'Interest'), ('fee', 'Fee'), ('tax', 'Tax'), ('transfer', 'Transfer'), ('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('other', 'Other')], max_length=20)),
                ('subtype', models.CharField(choices=[('account_fee', 'Account Fee'), ('adjustment', 'Adjustment'), ('assignment', 'Assignment'), ('buy', 'Buy'), ('buy_cover', 'Buy to Cover'), ('contribution', 'Contribution'), ('deposit', 'Deposit'), ('distribution', 'Distribution'), ('dividend', 'Dividend'), ('dividend_reinvestment', 'Dividend Reinvestment'), ('exercise', 'Exercise'), ('expire', 'Expire'), ('fund_fee', 'Fund Fee'), ('interest', 'Interest'), ('interest_receivable', 'Interest Receivable'), ('interest_reinvestment', 'Interest Reinvestment'), ('legal_fee', 'Legal Fee'), ('loan_payment', 'Loan Payment'), ('long_term_capital_gain', 'Long Term Capital Gain'), ('long_term_capital_gain_reinvestment', 'Long Term Capital Gain Reinvestment'), ('management_fee', 'Management Fee'), ('margin_expense', 'Margin Expense'), ('merger', 'Merger'), ('miscellaneous_fee', 'Miscellaneous Fee'), ('non_qualified_dividend', 'Non Qualified Dividend'), ('non_resident_tax', 'Non Resident Tax'), ('pending_credit', 'Pending Credit'), ('pending_debit', 'Pending Debit'), ('qualified_dividend', 'Qualified Dividend'), ('rebalance', 'Rebalance'), ('return_of_principal', 'Return of Principal'), ('sell', 'Sell'), ('sell_short', 'Sell Short'), ('send', 'Send'), ('short_term_capital_gain', 'Short Term Capital Gain'), ('short_term_capital_gain_reinvestment', 'Short Term Capital Gain Reinvestment'), ('spin_off', 'Spin Off'), ('split', 'Split'), ('stock_distribution', 'Stock Distribution'), ('tax', 'Tax'), ('tax_withheld', 'Tax Withheld'), ('trade', 'Trade'), ('transfer', 'Transfer'), ('transfer_fee', 'Transfer Fee'), ('trust_fee', 'Trust Fee'), ('unqualified_gain', 'Unqualified Gain'), ('withdrawal', 'Withdrawal')], max_length=50)),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=500)),
                ('iso_currency_code', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plaid_security_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('ticker_symbol', models.CharField(blank=True, max_length=20, null=True)),
                ('cusip', models.CharField(blank=True, max_length=20, null=True)),
                ('isin', models.CharField(blank=True, max_length=20, null=True)),
                ('sedol', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('close_price', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('close_price_as_of', models.DateField(blank=True, null=True)),
                ('institution_id', models.CharField(blank=True, max_length=100, null=True)),
                ('institution_security_id', models.CharField(blank=True, max_length=100, null=True)),
                ('is_cash_equivalent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['ticker_symbol', 'name'],
            },
        ),
        migrations.RemoveIndex(
            model_name='plaidwebhook',
            name='finance_pla_item_id_ddc848_idx',
        ),
        migrations.RemoveIndex(
            model_name='plaidwebhook',
            name='finance_pla_process_5ed61f_idx',
        ),
        migrations.AddIndex(
            model_name='plaidwebhook',
            index=models.Index(fields=['item_id'], name='finance_pla_item_id_65013b_idx'),
        ),
        migrations.AddIndex(
            model_name='plaidwebhook',
            index=models.Index(fields=['webhook_type'], name='finance_pla_webhook_bda6f9_idx'),
        ),
        migrations.AddIndex(
            model_name='plaidwebhook',
            index=models.Index(fields=['processed'], name='finance_pla_process_8387b6_idx'),
        ),
        migrations.AddField(
            model_name='investmenttransaction',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investment_transactions', to='finance.account'),
        ),
        migrations.AddField(
            model_name='investmenttransaction',
            name='security',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='finance.security'),
        ),
        migrations.AddField(
            model_name='holding',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='finance.account'),
        ),
        migrations.AddField(
            model_name='holding',
            name='security',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='finance.security'),
        ),
        migrations.AddIndex(
            model_name='investmenttransaction',
            index=models.Index(fields=['-date'], name='finance_inv_date_c3b73f_idx'),
        ),
        migrations.AddIndex(
            model_name='investmenttransaction',
            index=models.Index(fields=['account'], name='finance_inv_account_b6a662_idx'),
        ),
        migrations.AddIndex(
            model_name='investmenttransaction',
            index=models.Index(fields=['type'], name='finance_inv_type_003acc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='holding',
            unique_together={('account', 'security')},
        ),
    ]

# Base configuration for all environments
services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db-init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-testpass123}
      - POSTGRES_USER=${POSTGRES_USER:-testuser}
      - POSTGRES_DB=${POSTGRES_DB:-samaanai_dev}
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-testuser}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - ./.env:/app/.env:ro
    ports:
      - "${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}"
    networks:
      - app-network
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-samaanai_dev}
      - POSTGRES_USER=${POSTGRES_USER:-testuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-testpass123}
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - ENVIRONMENT=development
      - DEBUG=True
      - FRONTEND_URL=http://localhost:3000
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
      args:
        ENVIRONMENT: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}"
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=development
    env_file:
      - ./.env
    depends_on:
      - backend
    stdin_open: true
    tty: true
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: